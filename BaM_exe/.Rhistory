RestitStage = read.csv2(paste0(dir.data,"BcrResHorCor.csv"), header = T)[,(1:2)]
RestitStage$Date = ymd_hms(RestitStage$Date)
RestitStage$H = as.numeric(RestitStage$H)
# RestitStage$H = RestitStage$H - 0.06
### gau restit
RestitGau = read.csv2(paste0(dir.data,"JauBeaucaireCNR.csv"),header = T)
#### flood dates
date1840 = ymd("1840-11-03")
date1856 = ymd("1856-05-31")
date2003 = ymd_hms("2003-12-03 12:00:00")
PtStage[(which(PtStage$Date==(date1840-delta)) :
which(PtStage$Date==(date1840+delta))),]
delta = 5
PtStage[(which(PtStage$Date==(date1840-delta)) :
which(PtStage$Date==(date1840+delta))),]
PtStage[(which(PtStage$Date==(date1856-delta)) :
which(PtStage$Date==(date1856+delta))),]
RestitStage[(which(RestitStage$Date==(date2003-(delta*86400))) :
which(RestitStage$Date==(date2003+(delta*86400)))),]
rm(list=ls())
dev.off()
source("C://Users/mathieu.lucas/Desktop/GitMat/PropagMaxAn/Codes/dirs.R")
source(paste0(dir.codes,"module_BaRatin.r"))
source(paste0(dir.codes,"Fun_SPD.r"))
start.time = Sys.time()
case = "Res-Loc_sdb1"
dir.spd = paste0(dir.bam,"SPD_",case)
dir.bar = paste0(dir.bam,"BaR_",case)
######################################
############ DATA LOADING ############
######################################
Amax = read.table(paste0(dir.res,"Limni/amaxH_Res.txt"),header = T)
Noisy = as.matrix(read.table(paste0(dir.res,"Limni/NoisyHmaxAn_Res.txt")))
Gau = read.csv2(paste0(dir.data,"JauBeaucaireCNR.csv"),header=T)
#Shifts from segmentation
Tshifts = as.Date(c("1976-11-11","1994-01-09","2002-11-28","2003-12-05","2004-07-15","2004-12-03",
"2005-12-24","2008-06-28","2009-10-20","2016-11-24"))
######################################
########## DATA FORMATTING ###########
######################################
Gau$Date = ymd(Gau$Date);Gau$H = as.numeric(Gau$H);Gau$Q = as.numeric(Gau$Q);Gau$ICQ = as.numeric(Gau$ICQ)
Gau[,4] = (as.numeric(Gau[,4])*0.01 * Gau[,3])/2
Gau = Gau[,1:4]
nperiod = length(Tshifts) + 1
# identifiying the period of maxAn stages
Amax$Date = ymd(Amax$Date) ; nyears = nrow(Amax) ; Amax$period = 1 ; Gau$Period = 1
for(shift in 1:length(Tshifts)){
Amax$period[which(Amax$Date >= Tshifts[shift])] = shift + 1
Gau$Period[which(Gau$Date >= Tshifts[shift])] = shift + 1 }
names(Gau) = c("Date","h","Q","uQ","Period")
Gau$Period = as.numeric(Gau$Period)
######################################
######### PRIORS DEFINITION ##########
######################################
# 1. Define number of controls, periods and MonteCarlo samples
ncontrol = 3; nsim = 1000 ; RunSPD = F ; nspag = ncol(Noisy)
# 2. Define which parameters are varying in parameterization
isVar=c(T,F,F,T,F,F,F,F,F)
# 3. Define parameter names and prior distributions for b,a,c (of any control)
names.bac=c('b','a','c')
margins.bac=c('Gaussian','LogNormal','Gaussian')
#---------------------------------------
# Define priors on "physical" parameters
#---------------------------------------
# Priors are defined through Monte Carlo samples
# 1. Priors for low-flow control (control 1)
b1<-rnorm(nsim,mean=-5,sd=0.25) #
c1<-rnorm(nsim,mean=5/3,sd=0.025) # exponent
Bc1<-rlnorm(nsim,meanlog=log(300),sdlog=as.numeric(Transf_Gauss_lognorm(300,100)[2])) # channel width
KS1<-rlnorm(nsim,meanlog=log(35),sdlog=as.numeric(Transf_Gauss_lognorm(35,5)[2])) # Strickler coefficient
S01<-rlnorm(nsim,meanlog=log(5e-5),sdlog=as.numeric(Transf_Gauss_lognorm(5e-5,3e-5)[2])) # slope
# 2. Priors for main channel (control 2)
b2<-rnorm(nsim,mean=-5,sd=0.25) # channel bed stage
c2<-rnorm(nsim,mean=5/3,sd=0.025) # exponent
Bc2<-rlnorm(nsim,meanlog=log(300),sdlog=as.numeric(Transf_Gauss_lognorm(300,100)[2])) # channel width
KS2<-rlnorm(nsim,meanlog=log(35),sdlog=as.numeric(Transf_Gauss_lognorm(35,5)[2])) # Strickler coefficient
S02<-rlnorm(nsim,meanlog=log(2e-4),sdlog=as.numeric(Transf_Gauss_lognorm(2e-4,5e-5)[2])) # slope
# 2. Priors for main channel + floodway(control 3)
b3<-rnorm(nsim,mean=8,sd=0.5) # channel bed stage
c3<-rnorm(nsim,mean=5/3,sd=0.025) # exponent
Bc3<-rlnorm(nsim,meanlog=log(200),sdlog=as.numeric(Transf_Gauss_lognorm(200,100)[2])) # channel width
KS3<-rlnorm(nsim,meanlog=log(25),sdlog=as.numeric(Transf_Gauss_lognorm(25,5)[2])) # Strickler coefficient
S03<-rlnorm(nsim,meanlog=log(2.4e-4),sdlog=as.numeric(Transf_Gauss_lognorm(2.4e-4,5e-5)[2])) # slope
# 4. Priors for incremental global changes
#no global change
d.g<-matrix(rnorm(nsim*(nperiod-1),mean=0,sd=0),nrow=nsim,ncol=nperiod-1)
# 5. Priors for incremental local changes
d.l<-matrix(rnorm(nsim*(nperiod-1),mean=0,sd=0.8),nrow=nsim,ncol=nperiod-1)
# 6. Starting point for all parameters
start=list(
b1=-5,c1=5/3,Bc1=300,KS1=35,S01=5e-5,  # control 1
b2=-4,c2=5/3,Bc2=300,KS2=35,S02=2e-4, # control 2
b3= 8,c3=5/3,Bc3=200,KS3=25,S03=2.4e-4, # control 3
d.l=rep(0,nperiod-1),     # incremental local changes d.l
d.g=rep(0,nperiod-1)      # incremental global changes d.g
)
M                 = matrix(0, ncontrol, ncontrol)  #matrix of controls:
M[1,]             = c(1,0,0)   #
M[2,]             = c(0,1,0)   # main channel (rectangular wide channel in uniform condition)
M[3,]             = c(0,1,1)
Hmax = 10 # by default, 10 but be careful
#---------------------------------------
# Perform Monte-Carlo propagation
#---------------------------------------
MC=propagate_BcrRes_localb1b2_reverse(b1,c1,Bc1,KS1,S01,  # control 1: rectangular weir
b2,c2,Bc2,KS2,S02, # control 2: rectangular weir
b3,c3,Bc3,KS3,S03, # control 3: rectangular weir
d.g,d.l,           # global and local incremental changes
start              # starting vector
)
#plot priors verif
# boxplot(MC$sim,ylim=c(-15,30))
#---------------------------------------
# Fit prior distribution on MC samples
#---------------------------------------
# define marginal prior distributions and parameter names
margins=c();names=c();k=0
for(i in 1:ncontrol){
for(j in 1:3){
k=k+1
if(isVar[k]){
margins=c(margins,rep(margins.bac[j],nperiod))
names=c(names,paste(names.bac[j],i,'_',1:nperiod,sep=''))
}else{
margins=c(margins,margins.bac[j])
names=c(names,paste(names.bac[j],i,sep=''))
}
}
}
# fit multivariate prior distribution
prior=fit(MC$sim,margins,names)
#Remnant error model:
#--------------------
#LINEAR: err = g1+g2*Q   or    CONSTANT: err = g1):
remnant.err.model = "Linear"              #"Linear" or "Constant"
g1.prior          = c(0, 1000, 0.1)       #c(min,max, starting point)
g2.prior          = c(0, 100, 0.1)        #c(min,max, starting point) or c(mean, stdev, starting point)
#if model = "Constant" then put FALSE !.
g1.distr.type     = "Uniform"             #  "Uniform.
g2.distr.type     = "Uniform"             # "Lognormal" or "Uniform
######################################
############ BARATIN SPD #############
######################################
message("--------------------------")
message("--- RUNNING BARATIN SPD---")
message("--------------------------")
#dir for SPD
dir.create(dir.spd,showWarnings = F) ; setwd(dir.spd)
#write gau
write.table(Gau[,(2:5)],"Gaugings_data.txt",row.names = F)
# write config files
colperiod=4 # columns where period will be stored in BaM data file
writeConfigFilesSPD(prior = prior,start = MC$start,ncontrol = ncontrol,
nperiod = nperiod,colperiod = colperiod,isVar = isVar)
##write config BAM
BaRatin_SPD_config(dir.BaM = dir.bam,
dir.SPD.config = dir.spd,
dir.spd.short = paste0("SPD_",case,"/"),
pred = F,
nobs = nrow(Gau),
M = M,
remnant = remnant.err.model,
g1.prior = g1.prior, g2.prior = g2.prior,
g1.distr.type = g1.distr.type, g2.distr.type = g2.distr.type,
Ncycles = 500,
Hmax = Hmax)
setwd(dir.bam)
if(RunSPD == T){
setwd(dir.bam)
system2(paste0(dir.bam,"BaM.exe"))}
#dir for results
dir.res.case = paste0(dir.res,case,"/")
dir.create(dir.res.case,showWarnings = F)
dir.create(paste0(dir.res.case,"/SPD/"),showWarnings = F)
#copy SPD results in dir res
file.copy(from = file.path(dir.spd,"/Results_MCMC_Cooked.txt"),
to = file.path(dir.res.case,"/SPD/Results_MCMC_Cooked.txt"),overwrite = T)
file.copy(from = file.path(dir.spd,"Results_Summary.txt"),
to = file.path(dir.res.case,"/SPD/Results_Summary.txt"),overwrite = T)
model = ReadModel(ModelFile = paste0(dir.spd,"/Config_Model.txt"))
#### MCMC plots
vertical.length = length(names)*4
mcmc = MCMCplot(doLogPost = T,
doPar     = T,
doDPar    = T,
MCMCfile  = paste0(dir.res.case,"/SPD/Results_MCMC_Cooked.txt") ,
type      = "trace",  #="trace", # "histogram","density","scatterplot"
xlab      = '',
ylab      = '',
ncol      = 1,
prior     = NULL,
burn      = 0,
slim      = 1,
theme_size= 15)
# ggsave(mcmc, filename =paste(workspace,"/mcmc_it",iter,".png", sep=""),
#        bg = "transparent", width = 12, height =vertical.length, dpi = 100)
mcmc2 = MCMCplot(doLogPost = T,
doPar     = T,
doDPar    = T,
MCMCfile  =  paste0(dir.res.case,"/SPD/Results_MCMC_Cooked.txt")  ,
type      = 'density',
prior     = model$par,
xlab      = '',
ylab      = '',
ncol      = 1,
burn      = 0,
slim      = 1,
theme_size= 15)
# ggsave(mcmc2, filename =paste(workspace,"/mcmc2_it",iter,".png", sep=""),
# bg = "transparent", width = 12, height =vertical.length, dpi = 100)
dir.create(paste0(dir.plots,"/",case,"/"),showWarnings = F)
dir.plot.case = paste0(dir.plots,"/",case,"/")
dir.create(paste0(dir.plot.case,"SPD/"),showWarnings = F)
pdf(paste0(dir.plot.case,"/SPD/mcmc.pdf"), 17, vertical.length, useDingbats=F)
print(plot_grid(mcmc, mcmc2, nrow=1, ncol = 2,
labels = c("Trace plots", "Density plots"),label_size = 20) )
dev.off()
rm(mcmc);  rm(mcmc2); rm(model)
######################################
############ PLOT RC's ###############
######################################
message("--------------------------")
message("PLOTTING SPD RC's RESULTS")
message("--------------------------")
# read SPD results
data.MCMC.spd = as.matrix(read.table(paste0(dir.spd,"/Results_MCMC_Cooked.txt"),
header=TRUE,dec=".", sep=""))
data.MP.spd = tail(data.frame(read.table(paste0(dir.spd,"/Results_Summary.txt"),
row.names = 1, dec=".",sep="")),1)
nsample = length(data.MCMC.spd[,1])
min.grid = min(data.MCMC.spd[,1])
Hinf = -4;  Hsup = 15
Hgrid  = seq(Hinf, Hsup, 0.01)
ngrid = length(Hgrid)
#colors
RCcol = c("#a50026","#d73027","#f46d43","#fdae61","#fee090","#e0f3f8","#abd9e9","#74add1",
"#4575b4","#313695")
#init
RCs = list()
DatasRC = list()
for(periode in 1:nperiod){
GauPer = Gau[which(Gau$Period==periode),]
# if (periode != nperiod){
cook=data.MCMC.spd[,c(paste0("b1_",periode),"a1","c1", #bac1
paste0("b2_",periode),"a2","c2", #bac2
"b3","a3","c3",
"Y1_gamma1","Y1_gamma2","LogPost",#y & logpost
paste0("k1_",periode),paste0("k2_",periode),paste0("k3_",periode),#ks
paste0("ktype1_",periode),paste0("ktype2_",periode),paste0("ktype3_",periode) #ktypes
)]
cookmp  = data.MP.spd[,c(paste0("b1_",periode),"a1","c1", #bac1
paste0("b2_",periode),"a2","c2", #bac2
"b3","a3","c3",   #bac3
"Y1_gamma1","Y1_gamma2",#y & logpost
paste0("k1_",periode),paste0("k2_",periode),paste0("k3_",periode),#ks
paste0("ktype1_",periode),paste0("ktype2_",periode),paste0("ktype3_",periode) #ktypes
)]
# } else {
#   cook=data.MCMC.spd[,c(paste0("b1_",periode),"a1","c1", #bac1
#                         paste0("b2_",periode),"a2","c2", #bac2
#                         #paste0("b3_",periode),"a3","c3", #bac3
#                         "Y1_gamma1","Y1_gamma2","LogPost",#y & logpost
#                         paste0("k1_",periode-1),paste0("k2_",periode-1),#paste0("k3_",periode),#ks
#                         paste0("ktype1_",periode-1),paste0("ktype2_",periode-1)
#                         #,paste0("ktype3_",periode) #ktypes
#   )]
#   cookmp  = data.MP.spd[,c(paste0("b1_",periode),"a1","c1", #bac1
#                            paste0("b2_",periode),"a2","c2", #bac2
#                            #paste0("b3_",periode),"a3","c3", #bac3
#                            "Y1_gamma1","Y1_gamma2",#y & logpost
#                            paste0("k1_",periode-1),paste0("k2_",periode-1),
#                            #paste0("k3_",periode),#ks
#                            paste0("ktype1_",periode-1),paste0("ktype2_",periode-1)
#                            #,paste0("ktype3_",periode) #ktypes
#   )]
# }
MCMC.save    =  matrix(NA, nrow = nsample, ncol = ncol(cook))
MaxPost.save =  matrix(NA, nrow = 1,  ncol = ncol(cook)-1)
MCMC.save = cbind(cook, rep(1, nsample))
MaxPost.save = as.numeric(c(cookmp,1))
RC.Post    =  apply(MCMC.save,MARGIN = 1,  RC_controls,h = Hgrid,  M = M, ncontrols = ncontrol)
RC.MaxPost =  RC_controls_mp(theta = as.numeric(MaxPost.save),h=Hgrid,M=M,ncontrols = ncontrol)
data.tmp            = apply(RC.Post, MARGIN=1, quantile, probs=c(0.025,0.975), na.rm=TRUE)
data.tmp            = apply(data.tmp, MARGIN=c(1,2), function(x){ifelse(x<0,0,x)})
List.RC.quants      = data.frame(cbind(Hgrid, t(data.tmp),  RC.MaxPost))
rm(data.tmp)
colnames(List.RC.quants) = c("h", "inf", "sup", "maxpost")
# data.RC = List.RC.quants
# DatasRC[[periode]] = data.RC
DatasRC[[periode]] = List.RC.quants
}
## data for plot
DatPlot = data.frame(List.RC.quants[0,])
for(per in 1:nperiod){
DatPlot = rbind(DatPlot,cbind(round(DatasRC[[per]],2),rep(per,length(DatasRC[[per]]$h))))  }
names(DatPlot) = c('h','inf','sup','maxpost','period')
write.table(DatPlot,paste0(dir.res.case,"/SPD/DataRCs.txt"))
### PLOTS RC
DataRC = DatPlot
rm(DatPlot)
DataRC = DataRC[which(is.na(DataRC$maxpost)==F  & DataRC$maxpost > 0),]
DataRC$period=as.factor(DataRC$period)
Gau$Period=as.factor(Gau$Period)
plot.RC=ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(500,15000),xlim=c(-2,10))+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
## Normal scale
pdf(paste(dir.plot.case,"SPD/RC.pdf",sep=""),12,7,useDingbats=F)
print(plot.RC)
dev.off()
## Logarithmic scale
ylim.wind=c(200,14000);xlim.wind=c(-2,10)
pdf(paste(dir.plot.case,"SPD/RClog.pdf",sep=""),12,7,useDingbats=F)
print(plot.RC+
scale_y_log10()+
coord_cartesian(ylim=ylim.wind,xlim=xlim.wind))
dev.off()
print(plot.RC)
Tshifts
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=GauPlot,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=GauPlot,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 1, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 1, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
# geom_text(aes(x = 5.75, y = 13800, label = "1840"),
#           col = RColorBrewer::brewer.pal(10, name = "RdBu")[1] , size = 8)+
coord_cartesian(ylim=c(5000,15000),xlim=c(5,10))+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(5000,15000),xlim=c(7,13))+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 1, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 1, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
# geom_text(aes(x = 5.75, y = 13800, label = "1840"),
#           col = RColorBrewer::brewer.pal(10, name = "RdBu")[1] , size = 8)+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(5000,15000),xlim=c(7,13))+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_text(aes(x = 8.5, y = 12200, label = "1840"),
col = RColorBrewer::brewer.pal(10, name = "RdBu")[4] , size = 8)+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(8000,15000),xlim=c(9,13))+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_text(aes(x = 10.5, y = 12200, label = "2003"),
col = RColorBrewer::brewer.pal(10, name = "RdBu")[4] , size = 8)+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(8000,15000),xlim=c(9,13))+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_text(aes(x = 9.25, y = 11800, label = "2003"),
col = RColorBrewer::brewer.pal(10, name = "RdBu")[4] , size = 8)+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
dir.plot.case
## zoom hQ
plot.RCzoom = ggplot(DataRC)+
#RC's
geom_smooth(aes(x=h,y=maxpost,ymax=sup,ymin=inf,colour=period),size=1,stat='identity',alpha=0.2)+
geom_path(aes(x=h,y=maxpost,colour=period),size=1.5)+
### Gaugings
geom_linerange(aes(x=h,ymax=Q+2*uQ,ymin=Q-2*uQ,colour=Period),data=Gau,size=1)+
geom_point(aes(x=h,y=Q,colour=Period),data=Gau,na.rm=T,shape=16,size=3)+
### Labels
xlab(expression(paste("Stage [m]",sep="")))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
labs(colour = "Period")+
scale_fill_brewer(type = "div",palette = 5,aesthetics = "color")+
coord_cartesian(ylim=c(8000,15000),xlim=c(9,13))+
### 2003
geom_segment(aes(x = 11.35, xend = 11.35, y = 0,
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_segment(aes(x = 0, xend = 11.35, y = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)],
yend = DataRC$maxpost[which(DataRC$period == 4 & DataRC$h == 11.35)]),
lwd = 2, lty = 2, color = RColorBrewer::brewer.pal(10, name = "RdBu")[4])+
geom_text(aes(x = 9.25, y = 11700, label = "2003"),
col = RColorBrewer::brewer.pal(10, name = "RdBu")[4] , size = 8)+
### Theme
theme_bw(base_size=20)+
theme(axis.text=element_text(size=15),axis.title=element_text(size=20,face="bold")
,panel.grid.major=element_line(size=1.2),panel.grid.minor=element_line(size=0.8)
,legend.text=element_text(size=15),legend.title=element_text(size=20)
,legend.key.size=unit(1.5, "cm"),legend.position="right")
plot.RCzoom
ggsave(path = paste0(dir.plot.case,"SPD/"), filename = "RC_zoom.pdf", width = 16, height = 10)
